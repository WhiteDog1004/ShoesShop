{"version":3,"sources":["../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-transition-group/esm/CSSTransition.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","Detail.js"],"names":["replaceClassName","origClass","classToRemove","replace","RegExp","removeClass","node","classes","split","forEach","c","className","element","classList","remove","setAttribute","baseVal","CSSTransition","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","this","concat","appliedClasses","appear","enter","exit","onEnter","maybeNode","maybeAppearing","_this$resolveArgument","resolveArguments","appearing","removeClasses","addClass","props","onEntering","_this$resolveArgument2","type","onEntered","_this$resolveArgument3","onExit","onExiting","onExited","nodeRef","current","getClassNames","classNames","isStringClassNames","baseClassName","activeClassName","doneClassName","_inheritsLoose","_proto","prototype","phase","scrollTop","add","contains","indexOf","hasClass","_addClass","_this$appliedClasses$","base","active","done","render","_this$props","_objectWithoutPropertiesLoose","React","createElement","Transition","_extends","Component","defaultProps","propTypes","TabContent","useEffect","animeC","onTab","src","connect","state","reducer","alertOpen","reducer2","useState","onBox","onBoxC","onTabC","anime","id","useParams","history","useHistory","idNum","Number","getItem","localStorage","findItem","JSON","parse","find","item","stock","timer","setTimeout","clearTimeout","arr","findArr","num","undefined","push","findArr2","findIndex","splice","setItem","stringify","title","width","content","price","onClick","dispatch","payload","name","quan","goBack","Nav","fill","variant","defaultActiveKey","Item","Link","eventKey","in","timeout"],"mappings":"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","file":"static/js/3.7c22ffa2.chunk.js","sourcesContent":["function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](https://docs.angularjs.org/api/ngAnimate) library, you should\n * use it if you're using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**, so it's\n * important to add `transition` declaration only to them, otherwise transitions\n * might not behave as intended! This might not be obvious when the transitions\n * are symmetrical, i.e. when `*-enter-active` is the same as `*-exit`, like in\n * the example above (minus `transition`), but it becomes apparent in more\n * complex transitions.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument[0],\n          appearing = _this$resolveArgument[1];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntering = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument2 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument2[0],\n          appearing = _this$resolveArgument2[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onEntered = function (maybeNode, maybeAppearing) {\n      var _this$resolveArgument3 = _this.resolveArguments(maybeNode, maybeAppearing),\n          node = _this$resolveArgument3[0],\n          appearing = _this$resolveArgument3[1];\n\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(maybeNode, maybeAppearing);\n      }\n    };\n\n    _this.onExit = function (maybeNode) {\n      var _this$resolveArgument4 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument4[0];\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(maybeNode);\n      }\n    };\n\n    _this.onExiting = function (maybeNode) {\n      var _this$resolveArgument5 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument5[0];\n\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(maybeNode);\n      }\n    };\n\n    _this.onExited = function (maybeNode) {\n      var _this$resolveArgument6 = _this.resolveArguments(maybeNode),\n          node = _this$resolveArgument6[0];\n\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(maybeNode);\n      }\n    };\n\n    _this.resolveArguments = function (maybeNode, maybeAppearing) {\n      return _this.props.nodeRef ? [_this.props.nodeRef.current, maybeNode] // here `maybeNode` is actually `appearing`\n      : [maybeNode, maybeAppearing];\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    var _this$getClassNames = this.getClassNames('enter'),\n        doneClassName = _this$getClassNames.doneClassName;\n\n    if (type === 'appear' && phase === 'done' && doneClassName) {\n      className += \" \" + doneClassName;\n    } // This is to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n    }\n\n    if (className) {\n      this.appliedClasses[type][phase] = className;\n\n      _addClass(node, className);\n    }\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided, which\n   * will be suffixed for each stage, e.g. `classNames=\"fade\"` applies:\n   *\n   * - `fade-appear`, `fade-appear-active`, `fade-appear-done`\n   * - `fade-enter`, `fade-enter-active`, `fade-enter-done`\n   * - `fade-exit`, `fade-exit-active`, `fade-exit-done`\n   *\n   * A few details to note about how these classes are applied:\n   *\n   * 1. They are _joined_ with the ones that are already defined on the child\n   *    component, so if you want to add some base styles, you can use\n   *    `className` without worrying that it will be overridden.\n   *\n   * 2. If the transition component mounts with `in={false}`, no classes are\n   *    applied yet. You might be expecting `*-exit-done`, but if you think\n   *    about it, a component cannot finish exiting if it hasn't entered yet.\n   *\n   * 2. `fade-appear-done` and `fade-enter-done` will _both_ be applied. This\n   *    allows you to define different behavior for when appearing is done and\n   *    when regular entering is done, using selectors like\n   *    `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply\n   *    an epic entrance animation when element first appears in the DOM using\n   *    [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   *    simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * **Note**: when `nodeRef` prop is passed, `node` is not passed\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { Nav } from 'react-bootstrap';\r\n// import styled from 'styled-components';\r\nimport './Detail.scss';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\n\r\n// let 박스 = styled.div`\r\n//     padding : 20px;\r\n// `;\r\n\r\nfunction Detail(props) {\r\n    let [onBox, onBoxC] = useState(<div className='alertBox'>재고가 얼마 남지 않았어요!</div>);\r\n\r\n    let [onTab, onTabC] = useState(0);\r\n    let [anime, animeC] = useState(false);\r\n\r\n\r\n        let { id } = useParams();\r\n        // Hook \r\n        let history = useHistory();\r\n        // 방문기록 등을 저장해놓는 오브젝트\r\n        let idNum = Number(id);\r\n\r\n        let getItem = localStorage.getItem('getDefault');\r\n            getItem = JSON.parse(getItem);\r\n\r\n\r\n\r\n        let findItem = getItem.find(function(item){\r\n                return item.id == id;\r\n            });\r\n\r\n    useEffect(()=> {\r\n        if(findItem.stock <= 10){\r\n            let timer = setTimeout(()=> {\r\n                onBoxC(null);\r\n                return ()=>{ clearTimeout(timer) }  // setTimeout 쓸 때 주의점 - 타이머 해제 기술\r\n            }, 2000);\r\n        } else {\r\n            onBoxC(null);\r\n        }\r\n\r\n        // return function 어쩌구(){ 실행할 코드~사라질 때 실행됨  함수는 무조건 써야함 }\r\n        // useEffect(()=> {} 여러개를 쓰고싶다면 useEffect를 또 쓰면 됨 위에서부터 순서대로 실행\r\n    },[onBox]);\r\n    // ,[변수] 변수를 넣으면 그 변수가 변경될때만 useEffect실행  [] 아무것도 넣지않으면 <Detail> 업데이트시 실행 되지않음 영영 실행불가\r\n\r\n    useEffect(()=> {\r\n        var arr = localStorage.getItem('watched'); // 'watched'라는 로컬스토리지를 가져와서 arr 변수로 만듬\r\n        if( arr == null) { \r\n            var arr = []; // arr가 null이면 비어있는 배열 변수로 만듦 ( 맨처음으로 상품을 클릭하면 null임 )\r\n        } else {\r\n            arr = JSON.parse(arr); // null이 아니라면 \"\" 제거 ( JSON을 오브젝트로 바꿔주는 함수 )\r\n        }\r\n\r\n        // arr.push(findItem); // 클릭한 idNum 상품번호를 arr 배열에 push\r\n        let findArr = arr.find(function(num) {\r\n            return num.id == id;\r\n        });\r\n\r\n        if(findArr === undefined) {\r\n            arr.push(findItem); \r\n        } \r\n\r\n        let findArr2 = arr.findIndex(function(num) {\r\n            return num.id == id;\r\n        });\r\n\r\n        if(findArr !== undefined) { // 이미 값이 arr에 있다면 그 값을 삭제 후 최신으로 저장\r\n            if(findArr2 <= 4) {\r\n                arr.splice(findArr2, 1);\r\n                arr.push(findItem);\r\n            }\r\n        }\r\n        // arr = new Set(arr); // new Set()은 중복되는 것을 지워줌\r\n\r\n        arr = [...arr]; // [...이름] 배열 양끝에있는 []를 제거함 \r\n\r\n        if( arr.length > 5) {\r\n            if( arr !== idNum ){\r\n                arr.splice(0, 1);\r\n            }\r\n        }\r\n        \r\n        localStorage.setItem('watched' ,JSON.stringify(arr) ); // 로컬 스토리지에 다시 setItem을 이용해서 추가\r\n                                                               // JSON.stringify는 JSON자료로 바꿔주는 함수 )\r\n\r\n    }, []);\r\n\r\n    return(\r\n        <>\r\n        \r\n            <div className='alertName'><h1>{ findItem.title }</h1></div>\r\n            \r\n            {/* <input onChange={(e)=> { inputDataC(e.target.value)}} />\r\n            <div>{inputData}</div> */}\r\n\r\n            <div className=\"container\">\r\n                <div className=\"row detailBg\">\r\n                    <div className=\"col-md-6\">\r\n                        <img src={'https://raw.githubusercontent.com/WhiteDog1004/ShoesShop/main/shoes/shoes'+ (idNum + 1) +'.jpg'} width=\"100%\" />\r\n                    </div>\r\n                    <div className=\"col-md-6 mt-4 textBox\">\r\n                        <h4 className=\"pt-5\">{ findItem.title}</h4>\r\n                        <p>{ findItem.content}</p>\r\n                        <p>{ findItem.price}원</p>\r\n                        <p>재고 : { findItem.stock }</p>\r\n                        <button className=\"btn btn-danger\" onClick={()=> {\r\n                            props.dispatch({ type : '추가', payload : {\r\n                                id : findItem.id, name : findItem.title, quan : 1, price : findItem.price\r\n                            } });\r\n                            history.push('/Cart');\r\n                            \r\n                        }}>주문하기</button> \r\n                        <button className=\"btn btn-primary\" onClick={()=> { \r\n                            history.goBack();\r\n                        }}>뒤로가기</button> \r\n                    </div>\r\n                </div>\r\n            </div> \r\n\r\n            { onBox }\r\n\r\n            <Nav fill variant=\"tabs\" defaultActiveKey=\"link-0\" className='tabMenu'>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"link-0\" onClick={()=> {\r\n                        animeC(false);\r\n                        onTabC(0)\r\n                    }}>상품 설명</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"link-1\" onClick={()=> {\r\n                        animeC(false);\r\n                        onTabC(1)\r\n                    }}>배송 정보</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link eventKey=\"link-2\" onClick={()=> {\r\n                        animeC(false);\r\n                        onTabC(2)\r\n                    }}>기타</Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n\r\n            <CSSTransition in={anime} classNames='tabAnime' timeout={500}>\r\n                <TabContent onTab={onTab} animeC={animeC}/>\r\n            </CSSTransition>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction TabContent(props){\r\n\r\n    useEffect(()=> {\r\n        props.animeC(true);\r\n    });\r\n\r\n    if(props.onTab === 0) {\r\n        return <div className='tabContent'>\r\n                    <div className='tabFirst'><img src='https://raw.githubusercontent.com/WhiteDog1004/ShoesShop/main/shoes/shoes/detail_product.jpg'/></div>\r\n                    <p>나쁘지않네요</p>\r\n                    <p>당장 구매 ㄱㄱ</p>\r\n                </div>\r\n    } else if(props.onTab === 1) {\r\n        return <div className='tabContent'>1번째 내용입니다</div>\r\n    } else if(props.onTab === 2) {\r\n        return <div className='tabContent'>2번째 내용입니다</div>\r\n    }\r\n}\r\n\r\n// Lifecycle Hook 옛날에 이렇게 썼음\r\n// class Detail2 extends React.Component {\r\n//     componentDidMount(){\r\n//           Detail2 컴포넌트가 Mount(등장) 되었을 때 실행할 코드~\r\n//     }\r\n//     componentWillUnmount(){\r\n//          Detail2 컴포넌트가 Unmount(퇴장) 되기 직전에 실행할 코드~\r\n//     }\r\n// }\r\n\r\n\r\n// function StockInfo(props){\r\n//     return (\r\n//         <p>재고 : {props.stock[0]}</p>\r\n//     )\r\n// }\r\n\r\nfunction shop(state){\r\n    return {\r\n        state : state.reducer,\r\n        alertOpen : state.reducer2\r\n    }\r\n}\r\nexport default connect(shop)(Detail)"],"sourceRoot":""}